// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	dto "task-scheduler/internal/app/dto/task"
	entities "task-scheduler/internal/app/entities"

	mock "github.com/stretchr/testify/mock"
)

// TaskSaver is an autogenerated mock type for the TaskSaver type
type TaskSaver struct {
	mock.Mock
}

// SaveTask provides a mock function with given fields: taskDTO
func (_m *TaskSaver) SaveTask(taskDTO *dto.CreateTaskDTO) (*entities.TaskEntity, error) {
	ret := _m.Called(taskDTO)

	var r0 *entities.TaskEntity
	var r1 error
	if rf, ok := ret.Get(0).(func(*dto.CreateTaskDTO) (*entities.TaskEntity, error)); ok {
		return rf(taskDTO)
	}
	if rf, ok := ret.Get(0).(func(*dto.CreateTaskDTO) *entities.TaskEntity); ok {
		r0 = rf(taskDTO)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.TaskEntity)
		}
	}

	if rf, ok := ret.Get(1).(func(*dto.CreateTaskDTO) error); ok {
		r1 = rf(taskDTO)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTaskSaver interface {
	mock.TestingT
	Cleanup(func())
}

// NewTaskSaver creates a new instance of TaskSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTaskSaver(t mockConstructorTestingTNewTaskSaver) *TaskSaver {
	mock := &TaskSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
